{"version":3,"sources":["../../src/utils/constants.ts","../../src/utils/helpers.ts","../../src/components/SchemaBox/SchemaBox.tsx","../../src/components/Label/Label.tsx","../../src/components/Input/Input.helpers.ts","../../src/components/Input/Input.tsx","../../src/components/Select/SchemaTypesSelect.tsx","../../src/components/Buttons/RoundedButton.tsx","../../src/components/Buttons/AddButton.tsx","../../src/components/Buttons/DeleteButton.tsx","../../src/components/Buttons/CollapseButton.tsx","../../src/components/Buttons/CloseButton.tsx","../../src/components/Buttons/MenuButton.tsx","../../src/components/Checkbox/Checkbox.tsx","../../src/components/Checkbox/Checkbox.helpers.ts","../../src/components/SchemaMenu/SchemaMenuItem.tsx","../../src/components/SchemaMenu/SchemaMenuList.tsx","../../src/components/SchemaMenu/SchemaMenu.tsx","../../src/components/Modal/Modal.tsx","../../src/components/SchemaCreator/SchemaControls.tsx","../../src/components/SchemaCreator/SchemaCreator.tsx","../../src/utils/i18n.ts","../../src/components/JSONSchemaBuilder/JSONSchemaBuilder.tsx","App.tsx","index.tsx"],"names":["defaultSchema","type","properties","schemaTypes","value","label","commonValidProperties","stringValidSchemaProperties","numberValidSchemaProperties","integerValidSchemaProperties","boolValidSchemaProperties","arrayValidSchemaProperties","objectValidSchemaProperties","commonSchemaOptions","stringSchemaOptions","optionList","numberSchemaOptions","integerSchemaOptions","boolSchemaOptions","objectSchemaOptions","typeToOptions","string","integer","number","boolean","array","object","typeToValidFields","getAllSchemaKeys","_","getSchemaField","getSchemaFields","getSchemaType","getSchemaTitle","getSchemaProperties","getSchemaItems","getSchemaRequired","setSchemaField","setSchemaType","setSchemaTitle","setSchemaProperties","setSchemaProperty","key","setSchemaItems","deleteSchemaField","deleteSchemaProperty","addSchemaProperty","schema","renameSchemaField","oldKey","k","v","renameSchemaProperty","p","isSchemaObject","isSchemaArray","isFieldRequired","hasSchemaProperties","findOption","optionsToStrings","stringsToOptions","s","fieldsToOptions","title","schemaFieldAsOption","schemaPropertiesAsOptions","schemaRequiredPropertiesAsOptions","required","setSchemaTypeAndRemoveWrongFields","fields","getValidFields","SchemaBox","children","className","Label","handleEnterPress","handler","event","Input","React","setLocalVal","onChangeValue","localVal","onChange","onKeyPress","onBlur","placeholder","SchemaTypesSelect","t","useTranslation","options","item","helpers","option","RoundedButton","onClick","AddButton","icon","faPlus","DeleteButton","faTrashAlt","CollapseButton","isCollapsed","faChevronDown","CloseButton","faTimes","MenuButton","faEllipsisV","Checkbox","defaultChecked","Item","onDelete","TextItem","field","NumberItem","parseInt","BoolItem","CreatableMultiSelectItem","selected","allOptions","isMulti","SelectItem","RequiredMultiSelectItem","requiredOptions","typeToItem","text","props","multi_creatable","select","SchemaMenuList","SchemaMenu","displayFields","Modal","onClose","SchemaControls","onCollapse","schemakey","onChangeKey","setIsMenuOpen","o","onAdd","isMenuOpen","SchemaArrayControls","SchemaCreator","isRequired","faAsterisk","undefined","setIsCollapsed","c","SchemaArrayItems","SchemaObjectProperties","newKey","newSchema","resources","en","translation","es","i18n","fallbackLng","interpolation","escapeValue","locale","useSuspense","ready","App","useState","jsonSchema","setSchema","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.860b74f1.chunk.js","sourcesContent":["import {\r\n  ArraySchemaFieldOption,\r\n  ArrayValidSchemaField,\r\n  BoolSchemaFieldOption,\r\n  BoolValidSchemaField,\r\n  CommonSchemaFieldOption,\r\n  CommonValidSchemaField,\r\n  IntegerSchemaFieldOption,\r\n  IntegerValidSchemaField,\r\n  NumberSchemaFieldOption,\r\n  NumberValidSchemaField,\r\n  ObjectSchemaFieldOption,\r\n  ObjectValidSchemaField,\r\n  Schema,\r\n  SchemaMenuOption,\r\n  SchemaType,\r\n  SchemaTypeOption,\r\n  StringSchemaFieldOption,\r\n  StringValidSchemaField\r\n} from './types'\r\n\r\nexport const defaultSchema: Schema = {\r\n  type: 'object',\r\n  properties: {}\r\n}\r\n\r\nexport const schemaTypes: SchemaTypeOption[] = [\r\n  {\r\n    value: 'string',\r\n    label: 'schemaTypes.text',\r\n  },\r\n  {\r\n    value: 'integer',\r\n    label: 'schemaTypes.integer',\r\n  },\r\n  {\r\n    value: 'number',\r\n    label: 'schemaTypes.decimal',\r\n  },\r\n  {\r\n    value: 'boolean',\r\n    label: 'schemaTypes.boolean',\r\n  },\r\n  {\r\n    value: 'object',\r\n    label: 'schemaTypes.object',\r\n  },\r\n  {\r\n    value: 'array',\r\n    label: 'schemaTypes.array',\r\n  }\r\n]\r\n\r\nexport const formatOptions = [\r\n  {\r\n    value: 'date-time',\r\n    label: 'formatOptions.date',\r\n  },\r\n  {\r\n    value: 'email',\r\n    label: 'formatOptions.email',\r\n  },\r\n  {\r\n    value: 'hostname',\r\n    label: 'formatOptions.hostname',\r\n  },\r\n  {\r\n    value: 'ipv4',\r\n    label: 'formatOptions.ipv4',\r\n  },\r\n  {\r\n    value: 'ipv6',\r\n    label: 'formatOptions.ipv6',\r\n  },\r\n  {\r\n    value: 'uri',\r\n    label: 'formatOptions.uri',\r\n  }\r\n]\r\n\r\nconst commonValidProperties: CommonValidSchemaField[] = ['description', 'type' , 'title']\r\n\r\nexport const stringValidSchemaProperties: StringValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'enum',\r\n  'format',\r\n  'maxLength',\r\n  'minLength',\r\n  'pattern'\r\n]\r\n\r\nexport const numberValidSchemaProperties: NumberValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maximum','minimum','multipleOf'\r\n]\r\n\r\nexport const integerValidSchemaProperties: IntegerValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maximum','minimum','multipleOf'\r\n]\r\n\r\nexport const boolValidSchemaProperties: BoolValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n]\r\n\r\nexport const arrayValidSchemaProperties: ArrayValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'maxItems', 'minItems', 'uniqueItems', 'items'\r\n]\r\n\r\nexport const objectValidSchemaProperties: ObjectValidSchemaField[] = [\r\n  ...commonValidProperties,\r\n  'required', 'properties'\r\n]\r\n\r\nconst commonSchemaOptions: CommonSchemaFieldOption[] = [\r\n  { value: 'description', label: 'description', type: 'text' }\r\n]\r\n\r\nexport const stringSchemaOptions: StringSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minLength', label: 'requirement.minLength', type: 'number' },\r\n  { value: 'maxLength', label: 'requirement.maxLength', type: 'number' },\r\n  { value: 'enum', label: 'options', type: 'multi_creatable' },\r\n  { value: 'pattern', label: 'pattern', type: 'text' },\r\n  {\r\n    value: 'format',\r\n    label: 'format',\r\n    type: 'select',\r\n    optionList: formatOptions\r\n  }\r\n]\r\n\r\nexport const numberSchemaOptions: NumberSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minimum', label: 'requirement.minimum', type: 'number' },\r\n  { value: 'maximum', label: 'requirement.maximum', type: 'number' },\r\n  { value: 'multipleOf', label: 'requirement.multipleOf', type: 'number' }\r\n]\r\n\r\nexport const integerSchemaOptions: IntegerSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minimum', label: 'requirement.minimum', type: 'number' },\r\n  { value: 'maximum', label: 'requirement.maximum', type: 'number' },\r\n  { value: 'multipleOf', label: 'requirement.multipleOf', type: 'number' }\r\n]\r\n\r\nexport const boolSchemaOptions: BoolSchemaFieldOption[] = [\r\n  ...commonSchemaOptions\r\n]\r\n\r\nexport const objectSchemaOptions: ObjectSchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'required', label: 'requirement.required', type: 'required' }\r\n]\r\n\r\nexport const arraySchemaOptions: ArraySchemaFieldOption[] = [\r\n  ...commonSchemaOptions,\r\n  { value: 'minItems', label: 'requirement.minItems', type: 'number' },\r\n  { value: 'maxItems', label: 'requirement.maxItems', type: 'number' },\r\n  { value: 'uniqueItems', label: 'requirement.uniqueItems', type: 'boolean' }\r\n]\r\n\r\nexport const typeToOptions: Record<SchemaType, SchemaMenuOption[]> = {\r\n  string: stringSchemaOptions,\r\n  integer: integerSchemaOptions,\r\n  number: numberSchemaOptions,\r\n  boolean: boolSchemaOptions,\r\n  array: arraySchemaOptions,\r\n  object: objectSchemaOptions\r\n}\r\n\r\nexport const typeToValidFields: Record<SchemaType, string[]> = {\r\n  string: stringValidSchemaProperties,\r\n  integer: integerValidSchemaProperties,\r\n  number: numberValidSchemaProperties,\r\n  boolean: boolValidSchemaProperties,\r\n  object: objectValidSchemaProperties,\r\n  array: arrayValidSchemaProperties\r\n}\r\n","import _ from 'lodash/fp'\r\nimport { typeToOptions, typeToValidFields } from './constants'\r\nimport { Schema, SchemaType } from './types'\r\n\r\nexport const getAllSchemaKeys = _.keys\r\n\r\nexport const getSchemaField = _.get\r\n\r\nexport const getSchemaFields = _.pick\r\n\r\nexport const getSchemaType = getSchemaField('type')\r\n\r\nexport const getSchemaTitle = getSchemaField('title')\r\n\r\nexport const getSchemaProperty = (key: string) =>\r\n  getSchemaField(['properties', key])\r\n\r\nexport const getSchemaProperties = getSchemaField('properties')\r\n\r\nexport const getSchemaItems = getSchemaField('items')\r\n\r\nexport const getSchemaRequired = getSchemaField('required')\r\n\r\nexport const getSchemaRequiredProperties = (schema: Schema) => {\r\n  const required = getSchemaRequired(schema)\r\n  const properties = getSchemaProperties(schema)\r\n  return getSchemaFields(required, properties)\r\n}\r\n\r\nexport const setSchemaField = _.set\r\n\r\nexport const setSchemaType = setSchemaField('type')\r\n\r\nexport const setSchemaTitle = setSchemaField('title')\r\n\r\nexport const setSchemaProperties = setSchemaField('properties')\r\n\r\nexport const setSchemaProperty = (key: string) =>\r\n  setSchemaField(['properties', key])\r\n\r\nexport const setSchemaItems = setSchemaField('items')\r\n\r\nexport const deleteSchemaField = _.unset\r\n\r\nexport const deleteSchemaProperty = (key: string) =>\r\n  deleteSchemaField(['properties', key])\r\n\r\nexport const addSchemaProperty = (schema: Schema) =>\r\n  setSchemaProperty(`__${_.now()}__`)({}, schema)\r\n\r\nexport const renameSchemaField = (oldKey: string, newKey: string) =>\r\n  //Rename field key but maintains object \"order\"\r\n  _.flow([\r\n    _.entries,\r\n    _.map(([k, v]) => ({ [k === oldKey ? newKey : k]: v })),\r\n    _.reduce(_.assign, {})\r\n  ])\r\n\r\nexport const renameSchemaProperty = (\r\n  oldKey: string,\r\n  newKey: string,\r\n  schema: Schema\r\n) =>\r\n  _.flow([\r\n    getSchemaProperties,\r\n    renameSchemaField(oldKey, newKey),\r\n    (p) => setSchemaProperties(p, schema)\r\n  ])(schema)\r\n\r\nexport const isSchemaObject = (schema: Schema) =>\r\n  getSchemaType(schema) === 'object'\r\n\r\nexport const isSchemaArray = (schema: Schema) =>\r\n  getSchemaType(schema) === 'array'\r\n\r\nexport const isFieldRequired = (key: string) =>\r\n   _.flow([getSchemaRequired, _.contains(key)])\r\n\r\nexport const hasSchemaProperties = (schema: Schema) =>\r\n  !_.isEmpty(getSchemaProperties(schema))\r\n\r\nexport const hasSchemaItems = (schema: Schema) =>\r\n  !_.isEmpty(getSchemaItems(schema))\r\n\r\nexport const getSchemaMenuOptions = (type: SchemaType) => \r\n  _.get(type, typeToOptions)\r\n\r\nexport const findOption = (value: string) => _.find(['value', value])\r\n\r\nexport const optionsToStrings = _.map('value')\r\n\r\nexport const stringsToOptions = _.map((s) => ({ label: s, value: s }))\r\n\r\nexport const schemaFieldAsOption = (key: string, schema: Schema) => {\r\n  const title = getSchemaTitle(schema)\r\n  if (!_.isEmpty(title)) {\r\n    return { value: key, label: title }\r\n  }\r\n  return { value: key, label: key }\r\n}\r\n\r\nexport const fieldsToOptions = _.flow([\r\n  _.entries,\r\n  _.map(([key, val]) => schemaFieldAsOption(key, val))\r\n])\r\n\r\nexport const schemaPropertiesAsOptions = _.flow([\r\n  getSchemaProperties,\r\n  fieldsToOptions\r\n])\r\n\r\nexport const schemaRequiredPropertiesAsOptions = _.flow(\r\n  getSchemaRequiredProperties,\r\n  fieldsToOptions\r\n)\r\n\r\nexport const getValidFields = (type: SchemaType) => _.get(type, typeToValidFields)\r\n\r\nexport const removeWrongFields = (schema: Schema) => {\r\n  const type = getSchemaType(schema)\r\n  const fields = getValidFields(type)\r\n  return getSchemaFields(fields, schema)\r\n}\r\n\r\nexport const setSchemaTypeAndRemoveWrongFields = _.flow([setSchemaType, removeWrongFields])\r\n","import React from 'react'\r\n\r\nconst SchemaBox: React.FunctionComponent = ({children}) => {\r\n  return(\r\n    <div className=\"w-full border-l border-b border-blue-400 pl-2 pb-2 pt-2 rounded-bl\">\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaBox","import React from 'react'\r\n\r\nconst Label: React.FunctionComponent = ({ children }) => (\r\n  <label className='text-sm text-gray-700'>{children}</label>\r\n)\r\n\r\nexport default Label\r\n","export const handleStringChange = (handler: (value: string) => void) => {\r\n  return (event: React.FormEvent<HTMLElement>): void => {\r\n    handler((event.target as HTMLInputElement).value);\r\n  };\r\n}\r\n\r\nexport const handleEnterPress = (handler: () => void) => {\r\n  return (event: React.KeyboardEvent<HTMLInputElement>): void => {\r\n    if (event.key === 'Enter') {\r\n      handler();\r\n    }\r\n  };\r\n}","import React from 'react'\r\nimport { Label } from '../Label'\r\nimport { handleEnterPress, handleStringChange } from './Input.helpers'\r\n\r\ntype Props = {\r\n  onChange: (text: string) => void\r\n  placeholder?: string\r\n  value?: string\r\n  label?: string\r\n  type?: string\r\n}\r\n\r\nconst Input: React.FunctionComponent<Props> = ({\r\n  onChange,\r\n  placeholder,\r\n  value = '',\r\n  label,\r\n  type = 'text'\r\n}: Props) => {\r\n  const [localVal, setLocalVal] = React.useState<string>('')\r\n\r\n  React.useEffect(() => {\r\n    setLocalVal(value)\r\n  }, [value])\r\n\r\n  const onChangeValue = () => {\r\n    if (localVal === value) return\r\n\r\n    onChange(localVal)\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <Label>{label}</Label>\r\n      <input\r\n        type={type}\r\n        value={localVal}\r\n        onChange={handleStringChange(setLocalVal)}\r\n        onKeyPress={handleEnterPress(onChangeValue)}\r\n        onBlur={onChangeValue}\r\n        placeholder={placeholder}\r\n        className='shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline-blue focus:border-blue-500'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport { schemaTypes } from '../../utils/constants'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { SchemaType } from '../../utils/types'\r\nimport { Label } from '../Label'\r\nimport { useTranslation } from 'react-i18next';\r\nimport _ from 'lodash/fp'\r\n\r\ntype Props = {\r\n  type: SchemaType\r\n  onChange: (type: SchemaType) => void\r\n}\r\n\r\nconst SchemaTypesSelect: React.FunctionComponent<Props> = ({\r\n  type,\r\n  onChange\r\n}: Props) => {\r\n  const {t} = useTranslation()\r\n  const options = React.useMemo(() => _.map((item) => ({...item, label: t(item.label)}), schemaTypes), [schemaTypes])\r\n  return (\r\n    <div>\r\n      <Label>{t('type')}</Label>\r\n      <Select\r\n        className=' min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n        options={options}\r\n        value={helpers.findOption(type)(options)}\r\n        onChange={(option: any) => onChange(option.value)}\r\n        placeholder={t('type')}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaTypesSelect\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  className?: string,\r\n  title?: string\r\n  children: React.ReactNode\r\n}\r\n\r\nconst RoundedButton: React.FunctionComponent<Props> = ({ onClick=_.noop, className='', children, title }: Props) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      title={title}\r\n      className={`flex items-center border focus:outline-none focus:shadow-outline-blue \r\n      focus:border-blue-500 text-sm justify-center shadow w-8 h-8 rounded-full ${className}`}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default RoundedButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst AddButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-blue-500 hover:bg-blue-700'\r\n    >\r\n      <FontAwesomeIcon icon={faPlus} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default AddButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst DeleteButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-red-500 hover:bg-red-700'\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default DeleteButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { faChevronRight, faChevronDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  isCollapsed?: boolean\r\n  title?: string\r\n}\r\n\r\nconst CollapseButton: React.FunctionComponent<Props> = ({isCollapsed=false, onClick=_.noop, title}: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-white bg-gray-500 hover:bg-gray-600'\r\n    >\r\n      <FontAwesomeIcon icon={isCollapsed ? faChevronRight : faChevronDown} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default CollapseButton","import React from 'react'\r\nimport _ from 'lodash/fp'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst CloseButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-gray-800 bg-white hover:bg-gray-200'\r\n    >\r\n      <FontAwesomeIcon icon={faTimes} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default CloseButton\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport RoundedButton from './RoundedButton'\r\n\r\ntype Props = {\r\n  onClick?: () => void\r\n  title?: string\r\n}\r\n\r\nconst MenuButton: React.FunctionComponent<Props> = ({ onClick=_.noop, title }: Props) => {\r\n  return (\r\n    <RoundedButton\r\n      onClick={onClick}\r\n      title={title}\r\n      className='text-gray-800 bg-white hover:bg-gray-200'\r\n    >\r\n      <FontAwesomeIcon icon={faEllipsisV} />\r\n    </RoundedButton>\r\n  )\r\n}\r\n\r\nexport default MenuButton\r\n","import React from 'react'\r\nimport Toggle from 'react-toggle'\r\nimport 'react-toggle/style.css'\r\n\r\nimport { Label } from '../Label'\r\nimport { handleChange } from './Checkbox.helpers'\r\n\r\ntype Props = {\r\n  value: boolean\r\n  onChange: (v: boolean) => void\r\n  label?: string\r\n}\r\n\r\nconst Checkbox: React.FunctionComponent<Props> = ({\r\n  label,\r\n  value,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <div className='flex flex-row'>\r\n      <Label>{label}</Label>\r\n      <Toggle\r\n        onChange={handleChange(onChange)}\r\n        defaultChecked={value}\r\n        className='ml-2'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","export const handleChange = (handler: (value: boolean) => void) => {\r\n  return (event: React.FormEvent<HTMLElement>): void => {\r\n    handler((event.target as HTMLInputElement).checked);\r\n  };\r\n}","import React from 'react'\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport Select from 'react-select'\r\n\r\nimport { Schema, SchemaMenuOption } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { Input } from '../Input'\r\nimport { DeleteButton } from '../Buttons'\r\nimport { Checkbox } from '../Checkbox'\r\nimport { Label } from '../Label'\r\n\r\ntype ItemProps = {\r\n  onDelete: () => void\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Item: React.FunctionComponent<ItemProps> = ({\r\n  children,\r\n  onDelete\r\n}: ItemProps) => {\r\n  return (\r\n    <div className='flex items-end justify-between'>\r\n      {children}\r\n      <div className='ml-2'>\r\n        <DeleteButton onClick={onDelete} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  field: SchemaMenuOption\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nexport const TextItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Input\r\n        label={field.label}\r\n        value={helpers.getSchemaField(field.value, schema) as string}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, t, schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const NumberItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Input\r\n        label={field.label}\r\n        type={'number'}\r\n        value={helpers.getSchemaField(field.value, schema) as string}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, parseInt(t, 10), schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const BoolItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <Checkbox\r\n        label={field.label}\r\n        value={helpers.getSchemaField(field.value, schema) as boolean}\r\n        onChange={(t) =>\r\n          onChange(helpers.setSchemaField(field.value, t, schema))\r\n        }\r\n      />\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const CreatableMultiSelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const selected = helpers.getSchemaField(field.value, schema)\r\n\r\n  const allOptions = React.useMemo(\r\n    () => helpers.stringsToOptions(selected as string[]),\r\n    [selected]\r\n  )\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <CreatableSelect\r\n          isMulti\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={allOptions}\r\n          value={allOptions}\r\n          onChange={(options: any) => {\r\n            onChange(\r\n              helpers.setSchemaField(\r\n                field.value,\r\n                helpers.optionsToStrings(options),\r\n                schema\r\n              )\r\n            )\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const SelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const option = helpers.getSchemaField(field.value, schema)\r\n  const selected = React.useMemo(\r\n    () => helpers.findOption(option as string)(field.optionList),\r\n    [field.optionList, option]\r\n  )\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <Select\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={field.optionList}\r\n          value={selected}\r\n          onChange={(option: any) => {\r\n            onChange(helpers.setSchemaField(field.value, option.value, schema))\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport const RequiredMultiSelectItem: React.FunctionComponent<Props> = ({\r\n  field,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  if (!helpers.isSchemaObject(schema) || !helpers.hasSchemaProperties(schema))\r\n    return null\r\n\r\n  const allOptions = helpers.schemaPropertiesAsOptions(schema)\r\n  const requiredOptions = helpers.schemaRequiredPropertiesAsOptions(schema)\r\n\r\n  return (\r\n    <Item\r\n      onDelete={() => onChange(helpers.deleteSchemaField(field.value, schema))}\r\n    >\r\n      <div className='w-full'>\r\n        <Label>{field.label}</Label>\r\n        <Select\r\n          isMulti\r\n          className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n          options={allOptions}\r\n          value={requiredOptions}\r\n          onChange={(options: any) => {\r\n            onChange(\r\n              helpers.setSchemaField(\r\n                field.value,\r\n                helpers.optionsToStrings(options),\r\n                schema\r\n              )\r\n            )\r\n          }}\r\n          placeholder='Options'\r\n        />\r\n      </div>\r\n    </Item>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Schema,\r\n  SchemaFieldOptionType,\r\n  SchemaMenuOption\r\n} from '../../utils/types'\r\nimport {\r\n  BoolItem,\r\n  CreatableMultiSelectItem,\r\n  NumberItem,\r\n  RequiredMultiSelectItem,\r\n  SelectItem,\r\n  TextItem\r\n} from './SchemaMenuItem'\r\n\r\nconst typeToItem: Record<\r\n  SchemaFieldOptionType,\r\n  React.FunctionComponent<any>\r\n> = {\r\n  text: (props) => <TextItem {...props} />,\r\n  number: (props) => <NumberItem {...props} />,\r\n  boolean: (props) => <BoolItem {...props} />,\r\n  multi_creatable: (props) => <CreatableMultiSelectItem {...props} />,\r\n  select: (props) => <SelectItem {...props} />,\r\n  required: (props) => <RequiredMultiSelectItem {...props} />\r\n}\r\n\r\ntype Props = {\r\n  fields: SchemaMenuOption[]\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaMenuList: React.FunctionComponent<Props> = ({\r\n  fields,\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  return (\r\n    <ul className='mb-4 grid gap-2'>\r\n      {fields.map((field) => (\r\n        <li key={field.value} className=''>\r\n          {typeToItem[field.type]({ schema, onChange, field })}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SchemaMenuList\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Schema, SchemaMenuOption } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport Select from 'react-select'\r\nimport SchemaMenuList from './SchemaMenuList'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaMenu: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const {t} = useTranslation()\r\n  const type = helpers.getSchemaType(schema)\r\n  const allOptions = React.useMemo(() => \r\n    _.map((item) => ({...item, label: t(item.label)}), helpers.getSchemaMenuOptions(type))\r\n  , [\r\n    type\r\n  ])\r\n\r\n  const displayFields = React.useMemo(() => {\r\n    const fields = helpers.getAllSchemaKeys(schema)\r\n    return _.filter((item) => _.includes(item.value, fields), allOptions)\r\n  }, [schema, allOptions])\r\n  return (\r\n    <div className='min-w-md'>\r\n      <SchemaMenuList\r\n        fields={displayFields}\r\n        schema={schema}\r\n        onChange={onChange}\r\n      />\r\n      <Select\r\n        className='min-w-48 max-w-lg w-full shadow rounded border-gray-300 bg-white focus:outline-none focus:shadow-outline-blue focus:border-blue-300'\r\n        options={_.difference(allOptions, displayFields)}\r\n        value={null}\r\n        onChange={(option: any) =>\r\n          onChange(\r\n            helpers.setSchemaField(\r\n              (option as SchemaMenuOption).value,\r\n              undefined,\r\n              schema\r\n            )\r\n          )\r\n        }\r\n        placeholder={t('addFields')}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaMenu\r\n","import React from 'react'\r\nimport { CloseButton } from '../Buttons'\r\n\r\ntype Props = {\r\n  onClose: () => void\r\n  children?: React.ReactNode\r\n  title?: string | React.ReactNode\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = ({\r\n  onClose,\r\n  children,\r\n  title\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className='justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\r\n        <div className='relative w-auto my-6 mx-auto max-w-3xl'>\r\n          <div className='p-2 rounded shadow relative flex flex-col w-full bg-white outline-none focus:outline-none'>\r\n            <div className='flex items-end justify-between'>\r\n              <h3 className='font-semibold text-xl'>{title}</h3>\r\n              <CloseButton onClick={onClose} />\r\n            </div>\r\n            <div className='mt-2'>{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Input } from '../Input'\r\nimport { SchemaTypesSelect } from '../Select'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { Schema } from '../../utils/types'\r\nimport { AddButton, CollapseButton, DeleteButton, MenuButton } from '../Buttons'\r\nimport { SchemaMenu } from '../SchemaMenu'\r\nimport { Modal } from '../Modal'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  schemakey: string\r\n  isCollapsed?: boolean\r\n  onDelete?: () => void\r\n  onAdd?: () => void\r\n  onCollapse?: () => void\r\n  onChangeKey?: (key: string) => void\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nexport const SchemaControls: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  schemakey,\r\n  isCollapsed,\r\n  onDelete,\r\n  onChange,\r\n  onChangeKey,\r\n  onAdd,\r\n  onCollapse\r\n}: Props) => {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState<boolean>(false)\r\n  const {t} = useTranslation()\r\n  return (\r\n    <div className='flex flex-row items-end'>\r\n      <div className='grid grid-flow-col gap-2 mr-2'>\r\n        <Input\r\n          value={helpers.getSchemaTitle(schema)}\r\n          onChange={(t) => onChange(helpers.setSchemaTitle(t, schema))}\r\n          placeholder={t('title')}\r\n          label={t('title')}\r\n        />\r\n        <SchemaTypesSelect\r\n          type={helpers.getSchemaType(schema)}\r\n          onChange={(t) => onChange(helpers.setSchemaTypeAndRemoveWrongFields(t, schema))}\r\n        />\r\n        {_.isFunction(onChangeKey) ? (\r\n          <Input\r\n            value={schemakey}\r\n            onChange={onChangeKey}\r\n            placeholder={t('key')}\r\n            label={t('key')}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <div className='grid grid-flow-col items-center gap-1'>\r\n        {_.isFunction(onCollapse) ? (\r\n          <CollapseButton\r\n            onClick={onCollapse}\r\n            isCollapsed={isCollapsed}\r\n            title={t('collapse')}\r\n          />\r\n        ) : null}\r\n        <MenuButton\r\n          onClick={() => setIsMenuOpen((o) => !o)}\r\n          title={t('extraOptions')}\r\n        />\r\n        {_.isFunction(onDelete) ? (\r\n          <DeleteButton onClick={onDelete} title={t('delete')} />\r\n        ) : null}\r\n        {_.isFunction(onAdd) ? (\r\n          <AddButton onClick={onAdd} title={t('add')} />\r\n        ) : null}\r\n      </div>\r\n      {isMenuOpen ? (\r\n        <Modal onClose={() => setIsMenuOpen(false)} title={t('extraFields')}>\r\n          <SchemaMenu schema={schema} onChange={onChange} />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ArrayProps = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n  onAdd?: () => void\r\n}\r\n\r\nexport const SchemaArrayControls: React.FunctionComponent<ArrayProps> = ({\r\n  schema,\r\n  onChange,\r\n  onAdd\r\n}: ArrayProps) => {\r\n  const [isMenuOpen, setIsMenuOpen] = React.useState<boolean>(false)\r\n  const {t} = useTranslation()\r\n  return (\r\n    <div className='flex items-end'>\r\n      <SchemaTypesSelect\r\n        type={helpers.getSchemaType(schema)}\r\n        onChange={(t) => onChange(helpers.setSchemaTypeAndRemoveWrongFields(t, schema))}\r\n      />\r\n      <div className='ml-2 grid grid-flow-col gap-1'>\r\n        <MenuButton\r\n          onClick={() => setIsMenuOpen((o) => !o)}\r\n          title={t('extraOptions')}\r\n        />\r\n        {_.isFunction(onAdd) ? (\r\n          <AddButton onClick={onAdd} title={t('add')} />\r\n        ) : null}\r\n      </div>\r\n      {isMenuOpen ? (\r\n        <Modal onClose={() => setIsMenuOpen(false)} title={t('extraFields')}>\r\n          <SchemaMenu schema={schema} onChange={onChange} />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport { Schema } from '../../utils/types'\r\nimport * as helpers from '../../utils/helpers'\r\nimport { SchemaBox } from '../SchemaBox'\r\nimport { SchemaControls, SchemaArrayControls } from './SchemaControls'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons'\r\n\r\ntype Props = {\r\n  schema: Schema\r\n  schemakey?: string\r\n  isRequired?: boolean\r\n  onChangeKey?: (key: string) => void\r\n  onDelete?: (key: string) => void\r\n  onChange?: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaCreator: React.FunctionComponent<Props> = ({\r\n  schema,\r\n  onChangeKey = _.noop,\r\n  onChange = _.noop,\r\n  onDelete = _.noop,\r\n  schemakey = '__root__',\r\n  isRequired\r\n}: Props) => {\r\n  const [isCollapsed, setIsCollapsed] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-end\">\r\n        {isRequired && <FontAwesomeIcon icon={faAsterisk} className='mr-2 mb-3 text-xs' title={'Required'}/>}\r\n        <SchemaControls\r\n          schema={schema}\r\n          schemakey={schemakey}\r\n          isCollapsed={isCollapsed}\r\n          onChangeKey={schemakey !== '__root__' ? onChangeKey : undefined}\r\n          onAdd={\r\n            helpers.isSchemaObject(schema)\r\n              ? () => onChange(helpers.addSchemaProperty(schema))\r\n              : undefined\r\n          }\r\n          onCollapse={\r\n            helpers.isSchemaObject(schema) || helpers.isSchemaArray(schema)\r\n              ? () => setIsCollapsed((c) => !c)\r\n              : undefined\r\n          }\r\n          onDelete={\r\n            schemakey !== '__root__' ? () => onDelete(schemakey) : undefined\r\n          }\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className={`${isCollapsed ? 'hidden' : 'block'}`}>\r\n        {helpers.isSchemaObject(schema) && helpers.hasSchemaProperties(schema) && (\r\n          <SchemaBox>\r\n            <SchemaObjectProperties\r\n              onChangeKey={(oldkey, newkey) =>\r\n                onChange(helpers.renameSchemaProperty(oldkey, newkey, schema))\r\n              }\r\n              onDelete={(key) =>\r\n                onChange(helpers.deleteSchemaProperty(key)(schema))\r\n              }\r\n              onChange={(key, s) =>\r\n                onChange(helpers.setSchemaProperty(key)(s, schema))\r\n              }\r\n              schema={schema}\r\n            />\r\n          </SchemaBox>\r\n        )}\r\n        {helpers.isSchemaArray(schema) && (\r\n          <SchemaBox>\r\n            <SchemaArrayItems\r\n              schema={helpers.getSchemaItems(schema)}\r\n              onChange={(s) => onChange(helpers.setSchemaItems(s, schema))}\r\n            />\r\n          </SchemaBox>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SchemaCreator\r\n\r\ntype ArrayProps = {\r\n  schema: Schema\r\n  onChange: (schema: Schema) => void\r\n}\r\n\r\nconst SchemaArrayItems: React.FunctionComponent<ArrayProps> = ({\r\n  schema,\r\n  onChange\r\n}: ArrayProps) => {\r\n  return (\r\n    <div>\r\n      <SchemaArrayControls\r\n        schema={schema}\r\n        onChange={onChange}\r\n        onAdd={\r\n          helpers.isSchemaObject(schema)\r\n            ? () => onChange(helpers.addSchemaProperty(schema))\r\n            : undefined\r\n        }\r\n      />\r\n      {helpers.isSchemaObject(schema) && helpers.hasSchemaProperties(schema) && (\r\n        <div className='mt-2'>\r\n          <SchemaObjectProperties\r\n            onChangeKey={(oldkey, newkey) =>\r\n              onChange(helpers.renameSchemaProperty(oldkey, newkey, schema))\r\n            }\r\n            onDelete={(key) =>\r\n              onChange(helpers.deleteSchemaProperty(key)(schema))\r\n            }\r\n            onChange={(key, s) =>\r\n              onChange(helpers.setSchemaProperty(key)(s, schema))\r\n            }\r\n            schema={schema}\r\n          />\r\n        </div>\r\n      )}\r\n      {helpers.isSchemaArray(schema) && (\r\n        <SchemaBox>\r\n          <SchemaArrayItems\r\n            schema={helpers.getSchemaItems(schema)}\r\n            onChange={(s) => onChange(helpers.setSchemaItems(s, schema))}\r\n          />\r\n        </SchemaBox>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ObjectProps = {\r\n  schema: Schema\r\n  onDelete: (key: string) => void\r\n  onChangeKey: (oldKey: string, newKey: string) => void\r\n  onChange: (key: string, schema: Schema) => void\r\n}\r\n\r\nconst SchemaObjectProperties: React.FunctionComponent<ObjectProps> = ({\r\n  schema,\r\n  onChangeKey,\r\n  onDelete,\r\n  onChange\r\n}: ObjectProps) => {\r\n\r\n  return (\r\n    <ul className='grid gap-2 '>\r\n      {_.entries(helpers.getSchemaProperties(schema)).map(([key, s]) => (\r\n        <li key={key}>\r\n          <SchemaCreator\r\n            schema={s as Schema}\r\n            schemakey={key}\r\n            isRequired={helpers.isFieldRequired(key)(schema)}\r\n            onDelete={onDelete}\r\n            onChangeKey={(newKey) => onChangeKey(key, newKey)}\r\n            onChange={(newSchema) => onChange(key, newSchema)}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from '../locales/en.json';\r\nimport es from '../locales/es.json';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: en\r\n  },\r\n  es: {\r\n    translation: es\r\n  }\r\n};\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources,\r\n    fallbackLng: \"en\",\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n  export default i18n;","import React from 'react'\r\nimport _ from 'lodash/fp'\r\n\r\nimport {SchemaCreator} from '../SchemaCreator'\r\nimport { Schema } from '../../utils/types'\r\nimport { defaultSchema } from '../../utils/constants'\r\nimport '../../tailwind.styles.css'\r\nimport { useTranslation } from 'react-i18next'\r\nimport '../../utils/i18n';\r\n\r\ntype Props = {\r\n  locale?: string\r\n  schema: Schema\r\n  onChange?: (newSchema: Schema) => void\r\n}\r\n\r\nconst JSONSchemaBuilder: React.FunctionComponent<Props> = ({\r\n  locale = \"en\",\r\n  schema,\r\n  onChange\r\n}: Props) => {\r\n  const { i18n, ready } = useTranslation('null',{ useSuspense: false });\r\n  React.useEffect(() => {i18n.changeLanguage(locale)}, [locale])\r\n  if (!ready) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <SchemaCreator schema={!_.isEmpty(schema) ? schema : defaultSchema} onChange={onChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JSONSchemaBuilder\r\n","import React from 'react'\r\nimport JSONPretty from 'react-json-pretty'\r\nimport 'react-json-pretty/themes/1337.css'\r\n\r\n\r\nimport JSONSchemaBuilder, {Schema } from 'react-json-schema-builder'\r\nimport 'react-json-schema-builder/dist/index.css'\r\nimport jsonSchema from './schema.json'\r\n\r\nconst App = () => {\r\n  const [schema, setSchema] = React.useState<Schema>(jsonSchema)\r\n\r\n  return <div className=\"mx-auto grid gap-4 grid-flow-col p-8\">\r\n    <JSONSchemaBuilder locale={\"es\"} schema={schema} onChange={setSchema} />\r\n    <JSONPretty data={schema}/>\r\n  </div>\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}